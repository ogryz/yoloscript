- hosts: all
  user: deploy
  become: True

- hosts: proxy_nodes
  become: yes
  vars:
    proxy_server_port: 8080
    app_server_ip: 172.31.30.220
    app_server_port: 80
  tasks:
    - name: "Install nginx package"
      yum:
        name: nginx
        state: present
    - name: "copy welcome page"
      template:
        src: templates/index.html
        dest: "/usr/share/nginx/html/index.html"
    - name: "Create proxy config file"
      template:
        src: ./templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/commerce.conf
    - name: "Restart nginx service"
      service:
        name: nginx
        state: restarted
- hosts: web_nodes
  become: yes
  vars:
    packages:
      - git
      - python
    app_repo: 
    app_dir: /var/python_app
  tasks:
    - name: "Install Git & Python packages"
      yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages }}"
    - name: "Download pip package"
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: ~/get-pip.py
    - name: "Install pip package"
      command: python ~/get-pip.py
    - name: "Install django"
      yum:
        name: django
    - name: "Create project"
      command: django-adnim startproject my_first_django
    - name: "create folder"
      command: cd my_first_django
    - name: "start project"
      command: python manage.py startapp hello
    - name: "replace .py"
      template:
        src: templates/views.py
        dest: hello/views.py
    - name: "replace .py"
      template:
        src: templates/urls.py
        dest: hello/urls.py
    - name: "replace .py"
      template:
        src: templates/.py
        dest: my_first_django/views.py
    - name: "Clone app repository"
      git:
        repo: "{{ app_repo }}"
        dest: "{{ app_dir }}"
        force: yes
    - name: "Create user for app"
      user:
        name: python_app
        shell: /sbin/nologin
    - name: "Change app owner"
      file:
        path: "{{ app_dir }}"
        owner: python_app
        group: python_app
        mode: 0755
        recurse: yes
    - name: "Add app service"
      template:
        src: ./templates/app.service
        dest: /etc/systemd/system/python_app.service
    - name: "Start app service and restart"
      systemd:
        name: python_app
        daemon-reload: yes
        enabled: yes
        state: restarted 
