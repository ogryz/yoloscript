- hosts: all
  user: deploy
  become: True

- hosts: proxy_nodes
  become: yes
  vars:
    proxy_server_port: 8080
    app_server_ip: 172.31.16.116
    app_server_port: 3000
  tasks:
    - name: "Install nginx package"
      yum:
        name: nginx
        state: present
    - name: "Create proxy config file"
      template:
        src: ./templates/app.conf
        dest: /etc/nginx/conf.d/python_app.conf
    - name: "Restart nginx service"
      service:
        name: nginx
        state: restarted
- hosts: web_nodes
  become: yes
  vars:
    packages:
      - git
      - python
    app_repo: https://github.com/ogryz/homework.git
    app_dir: /var/python_app
  tasks:
    - name: "Install Git & Python packages"
      yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages }}"
    - name: "Download pip package"
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: ~/get-pip.py
    - name: "Install pip package"
      command: python ~/get-pip.py
    - name: "Install Flask"
      command: python -m pip install  Flask
    - name: "Clone app repository"
      git:
        repo: "{{ app_repo }}"
        dest: "{{ app_dir }}"
        force: yes
    - name: "Create user for app"
      user:
        name: python_app
        shell: /sbin/nologin
    - name: "Change app owner"
      file:
        path: "{{ app_dir }}"
        owner: python_app
        group: python_app
        mode: 0755
        recurse: yes
    - name: "Add app service"
      template:
        src: ./templates/app.service
        dest: /etc/systemd/system/python_app.service
    - name: "Start app service"
      systemd:
        name: python_app
        daemon-reload: yes
        enabled: yes
        state: restarted 
- hosts: stats_nodes
  become: yes
  vars:
    influx_rpm: https://dl.influxdata.com/influxdb/releases/influxdb-1.5.2.x86_64.rpm
    influx_telegraf_rpm: https://dl.influxdata.com/telegraf/releases/telegraf-1.6.3-1.x86_64.rpm
    grafana_rpm: https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-5.1.3-1.x86_64.rpm
    grafana_http_port: 3000
    database_name: metrics
    database_user: metrics
    database_password: metrics
    telegraf_hostname: "{{ansible_hostname}}"
  tasks:
    - name: "Install InfluxDB package"
      yum:
        name: "{{ influx_rpm }}"
    - name: "Start InfluxDB"
      service:
        name: influxdb
        state: started
        enabled: yes
    - name: "Wait for InfluxDB start"
      wait_for:
        port: 8086
        delay: 10
    - name: "Create InfluxDB database"
      shell: "curl -X POST 'http://localhost:8086/db?u={{ database_user }}&p={{ database_password }}' -d '{\"name\": \"{{ database_name }}\"}'"
    - name: "Install Telegraf package"
      yum:
        name: "{{ influx_telegraf_rpm }}"
        state: present
    - name: "Create Telegraf config file"
      template:
        src: ./templates/telegraf.conf
        dest: "/etc/telegraf/telegraf.conf"
    - name: "Start Telegraf"
      service:
        name: telegraf
        state: restarted
        enabled: yes
    - name: "Install Grafana package"
      yum:
        name: "{{ grafana_rpm }}"
        state: present
    - name: "Create Grafana config file"
      template:
        src: ./templates/grafana.ini
        dest: /etc/grafana/grafana.ini
    - name: "Start Grafana"
      service:
        name: grafana-server
        state: restarted
        enabled: yes

